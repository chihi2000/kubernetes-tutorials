name: Infrastructure Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform:
    name: 'Terraform Infrastructure'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -no-color -input=false -var="acr_name=${{ secrets.ACR_NAME }}"
      continue-on-error: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false -var="acr_name=${{ secrets.ACR_NAME }}"

    - name: Get AKS Credentials
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        az aks get-credentials --resource-group $(terraform output -raw resource_group_name) \
                               --name $(terraform output -raw aks_cluster_name) \
                               --overwrite-existing

    - name: Output Infrastructure Info
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "AKS Cluster: $(terraform output -raw aks_cluster_name)"
        echo "ACR Name: $(terraform output -raw acr_name)"
        echo "Resource Group: $(terraform output -raw resource_group_name)"
